/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var COPERNICUSS2 = ee.ImageCollection("COPERNICUS/S2"),
    glacier = /* color: #d63000 */ee.Geometry.Point([-32.825782502995814, 68.58491158595396]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// ######################################################################################################
// ######################################################################################################
//                                    ### ATMOSPHERIC CORRECTION WITH SIAC  ###
// ######################################################################################################
/* 
For a description of the SIAC method, please see <https://github.com/MarcYin/SIAC_GEE>, and 
Yin, F., Lewis, P. E., Gomez-Dans, J., & Wu, Q. (2019, February 21). 
A sensor-invariant atmospheric correction method: application to Sentinel-2/MSI and Landsat 8/OLI. 
https://doi.org/10.31223/osf.io/ps957
*/

// ---- Area of Interest (AOI) and User parameters
//var ground_sensor = ee.Geometry.Point(-33.00,68.64);
//var polygon = ground_sensor.buffer(1000).bounds();//
var date1 = '2017-11-15';
var date2   = '2018-11-30';

//Loading S2 L1C Dataset
var s2_collection = ee.ImageCollection("COPERNICUS/S2");

//Filtering an image
var S2_TOA_Image = s2_collection
                  .filterBounds(glacier)
                  .filterDate(date1,date2)
                  .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE',20))
                  .first();
Map.addLayer(S2_TOA_Image,{min: 0 , max:65535, gamma:2, bands:['B4','B3','B2']},'S2 L1C Image');

//min: 0 , max:65535, gamma:2,

//Importing the SIAC atmospheric correction module
var siac = require('users/marcyinfeng/utils:SIAC');
//This module requires an image, not an image collection

// - SIAC bottom of atmosphere (BOA) reflectance Module for Various Sensors
//var L7_boa = siac.get_l7_sur(image); // For Landsat 7
//var L8_boa = siac.get_l8_sur(image); // For Landsat 8
//var S2_boa = siac.get_sur(image);    // For Sentinel 2


var S2_BOA_Image = siac.get_sur(S2_TOA_Image);
print(S2_BOA_Image)


Map.addLayer(S2_BOA_Image,{bands:['B4','B3','B2']},'Sentinel 2 L2A Image');



                