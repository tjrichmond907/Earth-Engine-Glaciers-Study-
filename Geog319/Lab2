/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var S2 = ee.ImageCollection("COPERNICUS/S2_SR"),
    roi = /* color: #d63000 */ee.Geometry.Point([-124.39770234329244, 48.57209508885032]),
    bare = /* color: #d11616 */ee.Feature(
        ee.Geometry.MultiPolygon(
            [[[[-124.33623362800178, 48.55838084911221],
               [-124.3372099520832, 48.557400908440975],
               [-124.33671642562446, 48.5571239652457],
               [-124.33629800101814, 48.55717367311033],
               [-124.3358044745594, 48.557585536395536],
               [-124.33537532111701, 48.55816782014627],
               [-124.33608342429694, 48.558508666061165]]],
             [[[-124.40083873211398, 48.53037789788918],
               [-124.40154683529391, 48.529681614809945],
               [-124.40083336769595, 48.529376099824546],
               [-124.40047395168796, 48.52964608990635],
               [-124.40005552708163, 48.52945780750121],
               [-124.39977657734408, 48.52959990749441],
               [-124.3997980350162, 48.53015764611367],
               [-124.4007153504993, 48.53045605151472]]],
             [[[-124.34287573496908, 48.5426702468722],
               [-124.34270407359213, 48.542123300933966],
               [-124.3419423262319, 48.54234350065881],
               [-124.34206034342856, 48.542925959828736]]]]),
        {
          "label": "bare",
          "system:index": "0"
        }),
    water = /* color: #1485f9 */ee.Feature(
        ee.Geometry.MultiPolygon(
            [[[[-124.40407770711583, 48.48762537567998],
               [-124.40404552060765, 48.48677917423633],
               [-124.40240400869054, 48.48680761821167],
               [-124.40245765287084, 48.487746260447864]]],
             [[[-124.3566908361808, 48.47967610057558],
               [-124.35665864967262, 48.479078689751915],
               [-124.35532827400124, 48.4790715776759],
               [-124.3554462911979, 48.47971166052181]]]]),
        {
          "label": "water",
          "system:index": "0"
        }),
    veg = /* color: #2cff0c */ee.Feature(
        ee.Geometry({
          "type": "GeometryCollection",
          "geometries": [
            {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    -124.40849707555779,
                    48.54908804289488
                  ],
                  [
                    -124.40836832952508,
                    48.54765336706287
                  ],
                  [
                    -124.40796063375481,
                    48.547482907825014
                  ],
                  [
                    -124.40557883214959,
                    48.548945997597016
                  ],
                  [
                    -124.40510676336297,
                    48.549414745566885
                  ],
                  [
                    -124.40602944326409,
                    48.54945735880339
                  ],
                  [
                    -124.40669463109978,
                    48.549855080613575
                  ],
                  [
                    -124.40748856496819,
                    48.549855080613575
                  ]
                ]
              ],
              "evenOdd": true
            },
            {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    -124.27929180861813,
                    48.57518662622648
                  ],
                  [
                    -124.28154486419064,
                    48.57368880128969
                  ],
                  [
                    -124.28090113402706,
                    48.57334095881796
                  ],
                  [
                    -124.279270350946,
                    48.57339774958906
                  ],
                  [
                    -124.27766102553707,
                    48.57405083887178
                  ]
                ]
              ],
              "evenOdd": true
            },
            {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    -124.3765225517963,
                    48.55433369567829
                  ],
                  [
                    -124.37626505973087,
                    48.55342469312351
                  ],
                  [
                    -124.37553469897723,
                    48.55351003690158
                  ],
                  [
                    -124.37600676776385,
                    48.554397733398496
                  ]
                ]
              ],
              "evenOdd": true
            },
            {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    -124.37867923603093,
                    48.54701501980406
                  ],
                  [
                    -124.37835737094915,
                    48.5465178391508
                  ],
                  [
                    -124.37730594501531,
                    48.54691558406416
                  ],
                  [
                    -124.37779947147405,
                    48.54734173585955
                  ]
                ]
              ],
              "evenOdd": true
            },
            {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    -124.38141893902464,
                    48.53034341122398
                  ],
                  [
                    -124.38144039669676,
                    48.52929898230353
                  ],
                  [
                    -124.37993835964842,
                    48.529313192365386
                  ],
                  [
                    -124.38003491917296,
                    48.5303647258756
                  ]
                ]
              ],
              "geodesic": true,
              "evenOdd": true
            }
          ],
          "coordinates": []
        }),
        {
          "label": "veg",
          "system:index": "0"
        });
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// Get a single Sentinel-2 image over the area of interest.
var S2_2021 = ee.Image(S2
.filterBounds(roi)
.filterDate('2021-06-15','2021-06-30')
.sort('CLOUD_COVERAGE_ASSESSMENT')
.first());
// Print the image to the console.
print('Sentinel 2 2021:', S2_2021);
// Define visualization parameters in a JavaScript dictionary.
var trueColor = {
bands: ['B4', 'B3', 'B2'],
min: 0,
max: 2000
};
//select the Sentinel-2 bands we want to work with
var bands = ['B1', 'B2', 'B3', 'B4', 'B8', 'B11', 'B12'];
//SUBSET image via geometry 'sub' and name PR_2021
var sub=ee.Geometry.Polygon([[-124.47,48.46],[-124.20,48.46],[-124.20,48.67],[-124.47,48.67]]);
var PR_2021=(S2_2021.clip(sub))
.select(bands);
// Print the image to the console.
print('Sentinel Subset of Port Renfrew area 2021', PR_2021);
Map.addLayer(PR_2021, trueColor, 'Sentinel Subset');
Map.setCenter(-124.35, 48.62, 10); // centers map on the study area


//the first step is to define the endmember samples as variables
var series = {
    0: {color: '#d1341c'}, // bare
    1: {color: '#1dd61a'}, // veg
    2: {color: '#1734ff'}, // water
};
var plotOptions1 = {
  series: series,
};
// Define customization options.
var plotOptions1 = {
  title: 'Image band values for 3 regions',
  hAxis: {title: 'Wavelength (nanometers)'},
  vAxis: {title: 'Reflectance'},
  lineWidth: 2,
  pointSize: 4,
  series: series,
};
//Create spectral plots - Choose bands to include and define feature collection to use
var subset = PR_2021.select('B1','B2','B3','B4','B8','B11','B12');
var samples = ee.FeatureCollection([bare,veg,water]);
// Define a list of Sentinel wavelengths for X-axis labels.
var wavelengths = [444, 497,560,665,835,1614,2202];
// Create the chart and set options. 
var Chart1 = ui.Chart.image.regions( subset, samples, ee.Reducer.mean(), 10, 'label', wavelengths) .setChartType('ScatterChart') .setOptions(plotOptions1); 
// Display the chart. 
print(Chart1);


// Replace the numbers below with the values YOU recorded in the endmember table above BEFORE you copy/paste and run this code.
var bare = [676,789,922,1183,1958,3152,2078];
var veg = [195,257,675,281,4416,1674,684];
var water = [228,221,174,69,41,12,13];
// Determine the fractional contribution of the endmembers.
var fractions = PR_2021.unmix({endmembers:[bare, veg, water], sumToOne:true});
Map.addLayer(fractions, {min: 0, max: 1},
  'fractions (red=bare, green=veg, blue=water)');
  
//for this method, run the NDVI on your Sentinel image: variable is named 'ndvi' and is an expression you write:
var ndvi = PR_2021.expression(
  '((NIR-RED)/(NIR+RED))',{
    'NIR':PR_2021.select('B8'),
    'RED':PR_2021.select('B4')
  });
  print(ndvi);
  var vegPalette = ['white', 'green'];
  Map.addLayer(ndvi,{min: 0, max: 1, palette: vegPalette}, 'NDVI');

