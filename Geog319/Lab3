/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var site_1 = /* color: #d63000 */ee.Geometry.Point([-123.42499539823618, 48.78410842147973]),
    site_2 = /* color: #98ff00 */ee.Geometry.Point([-123.43092134429075, 49.04749958773962]),
    site_3 = /* color: #0B4A8B */ee.Geometry.Point([-123.21091296179561, 49.08258052791111]),
    site_4 = /* color: #ffc82d */ee.Geometry.Point([-123.24225304917437, 49.59447709401906]),
    site_5 = /* color: #00ffff */ee.Geometry.Point([-123.14072783704752, 49.29547873961155]),
    sample_1 = /* color: #c20a0a */ee.Feature(
        ee.Geometry.Polygon(
            [[[-123.42515151899977, 48.78417137524311],
              [-123.42515151899977, 48.78402910736944],
              [-123.42466335695906, 48.78403175832729],
              [-123.42468615573569, 48.784197001090526]]]),
        {
          "label": "sample_1",
          "system:index": "0"
        }),
    sample_2 = /* color: #b3ff66 */ee.Feature(
        ee.Geometry.Polygon(
            [[[-123.43120713842839, 49.04762346501167],
              [-123.4312084795329, 49.04736767473198],
              [-123.43079810155362, 49.04736767473198],
              [-123.43080346597165, 49.04762961802624]]]),
        {
          "label": "sample_2",
          "system:index": "0"
        }),
    sample_3 = /* color: #0b28ce */ee.Feature(
        ee.Geometry.Polygon(
            [[[-123.21117306880687, 49.08269584108241],
              [-123.21116770438884, 49.082430569021376],
              [-123.2106205337498, 49.08243583934104],
              [-123.21062321595882, 49.082701111373915]]]),
        {
          "label": "sample_3",
          "system:index": "0"
        }),
    sample_4 = /* color: #ffdc49 */ee.Feature(
        ee.Geometry.Polygon(
            [[[-123.24242995412537, 49.594628285437324],
              [-123.24243129522988, 49.594363150574885],
              [-123.24214429886528, 49.59436228127786],
              [-123.24215368659684, 49.59463350119066]]]),
        {
          "label": "sample_4",
          "system:index": "0"
        }),
    sample_5 = /* color: #0effee */ee.Feature(
        ee.Geometry.Polygon(
            [[[-123.14095950075854, 49.29560441446424],
              [-123.14095950075854, 49.29537788992584],
              [-123.14056119271983, 49.295363021483446],
              [-123.14056387492884, 49.295612285954576]]]),
        {
          "label": "sample_5",
          "system:index": "0"
        });
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// Load a Senintel-2 surface reflectance image and select the bands we want to analyze
var bands = ['B1', 'B2', 'B3', 'B4', 'B5', 'B6', 'B7', 'B8', 'B8A'];
var S2_SoG = ee.Image('COPERNICUS/S2_SR/20210704T190921_20210704T191755_T10UDV')
  .select(bands);
//define display parameters 
var trueColor = {bands: ['B4', 'B3', 'B2'], min: 0, max: 3000};
print('Strait of Georgia Sentinel-2', S2_SoG);
Map.centerObject(S2_SoG);
//add image to the map display
Map.addLayer(S2_SoG, trueColor, 'Sentinel-2 Strait of Georgia');


// import geometry points

//Collect 5 water samples and define variables for chart
var series = {
    0: {color: '#c20a0a'}, // sample_1
    1: {color: '#b3ff66'}, // sample_2
    2: {color: '#0b28ce'}, // sample_3
    3: {color: '#ffdc49'}, // sample_4
    4: {color: '#0effee'}, //sample_5
    };
    //////////S2 plot
var plotOptions1 = {
  series: series,
};
// Define customization options.
var plotOptions1 = {
  title: 'Sentinel-2  Surface reflectance spectra of Water Types in the Fraser River - Strait of Georgia',
  hAxis: {title: 'Wavelength (nanometers)'},
  vAxis: {title: 'Reflectance'},
  lineWidth: 2,
  pointSize: 4,
  series: series,
};
//Create spectral plots - Choose bands to include and define feature collection to use
var subset = S2_SoG.select('B[2-8]');
var samples = ee.FeatureCollection([sample_1,sample_2,sample_3,sample_4,sample_5]);

// Define a list of Sentinel-2 wavelengths for X-axis labels.
var wavelengths = [492, 559, 665, 704, 739, 780, 833];
// Create the chart and set options. 
var Chart1 = ui.Chart.image.regions( subset, samples, ee.Reducer.mean(), 10, 'label', wavelengths) .setChartType('ScatterChart') .setOptions(plotOptions1); 
// Display the chart. 
print(Chart1);




